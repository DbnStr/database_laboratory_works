USE tempdb
GO

if OBJECT_ID(N'bank_account') IS NOT NULL
    DROP TABLE bank_account
GO

CREATE TABLE bank_account (
    [id] INT IDENTITY(1, 1) PRIMARY KEY NOT NULL,
    [balance] INT NOT NULL,
    [currency] VARCHAR(50) NOT NULL
)
GO

INSERT INTO bank_account (balance, currency) VALUES
(
    100, 'ruble'
)
GO

--Задание 1 : Исследовать и проиллюстрировать на примерах различные уровни изоляции транзакций MS SQL Server, устанавливаемые с использованием инструкции SET TRANSACTION ISOLATION LEVEL
--Транзакция 1 : Данная транзакция используется для выявления проблемы "грязного чтения"

BEGIN TRANSACTION

UPDATE bank_account SET balance = balance + 100 WHERE id = 1

WAITFOR DELAY '00:00:03'

--Задание 2 : значения request_mode (основные): 

-- NULL = Блокировки нет. Играет роль заполнителя.

-- SCH-S (стабильность схемы) = гарантирует, что элемент схемы, такой как таблица или индекс, не будет удален, пока в каком-либо сеансе удерживается блокировка стабильности схемы для элемента схемы.

-- SCH-M (изменение схемы) = должен храниться в любом сеансе, который хочет изменить схему указанного ресурса. Заверяет, что другие сеансы не имеют ссылок на обозначенный объект.

-- S (общий) = сеансу хранения предоставлен общий доступ к ресурсу.

-- U (обновление) = указывает на блокировку обновления, полученную на ресурсы, которые в конечном итоге могут быть обновлены. Используется для предотвращения распространенной формы взаимоблокировки, которая происходит, если несколько сеансов блокируют ресурсы для возможного обновления в будущем.

-- X (эксклюзивная) = сеансу с удержанием предоставляется эксклюзивный доступ к ресурсу.

-- Имеет значение (намеренный общий) = указывает намерение поместить блокировки S на некоторый подчиненный ресурс в иерархии блокировок.

-- IU (намеренное обновление) = указывает намерение поместить блокировки U на некоторые подчиненные ресурсы в иерархии блокировок.

-- IX (с намерением монопольного доступа) = указывает на намерение поместить блокировки X на некоторые подчиненные ресурсы в иерархии блокировок.

-- SIU (коллективная блокировка с намерением обновления) = указывает общий доступ к ресурсу с целью получения блокировок обновления для подчиненных ресурсов в иерархии блокировок.

-- ШЕСТЬ (совмещаемая блокировка с монопольным доступом) = указывает общий доступ к ресурсу с целью получения монопольных блокировок подчиненных ресурсов в иерархии блокировок.

-- UIX (монопольная блокировка обновления) = указывает на блокировку обновления ресурса с целью получения монопольных блокировок подчиненных ресурсов в иерархии блокировок.

-- BU = используется массовыми операциями.

-- RangeS_S (общий Key-Range и блокировка общего ресурса) = указывает на сериализуемый просмотр диапазона.

-- RangeS_U (общие Key-Range и блокировка ресурса обновления) = указывает на сериализуемый просмотр обновлений.

-- RangeI_N (вставка Key-Range и блокировка ресурса NULL) = используется для проверки диапазонов перед вставкой нового ключа в индекс.

-- RangeI_S = блокировка преобразования Key-Range, созданная перекрытием блокировок RangeI_N и S.

-- RangeI_U = Блокировка преобразования Key-Range, созданная перекрытием блокировок RangeI_N и U.

-- RangeI_X = Блокировка преобразования Key-Range, созданная перекрытием блокировок RangeI_N и X.

-- RangeX_S = Блокировка преобразования Key-Range, созданная перекрытием RangeI_N и RangeS_S. RangeS_S.

-- RangeX_U = Блокировка преобразования Key-Range, созданная перекрытием блокировок RangeI_N и RangeS_U.

-- RangeX_X (монопольная Key-Range и монопольная блокировка ресурса) = это блокировка преобразования, используемая при обновлении ключа в диапазоне.

SELECT locks.resource_type,
    locks.request_mode,
	DB_NAME(locks.resource_database_id) AS database_name,
	locks.resource_description,
	locks.resource_associated_entity_id
FROM sys.dm_tran_locks AS locks

ROLLBACK

SELECT * FROM bank_account WHERE id = 1

--Транзакция 2 : Данная транзакция используется для выявления проблемы "невоспроизводимое чтение" (non-repeatable read)

BEGIN TRANSACTION

UPDATE bank_account SET balance = balance + 100

COMMIT

--Транзакция 3 : Данная транзакция используется для выявления проблемы "фантомное чтение" (phantom read)

BEGIN TRANSACTION

INSERT INTO bank_account VALUES
(
    200, 'dollar'
),
(
    100, 'euro'
)

COMMIT